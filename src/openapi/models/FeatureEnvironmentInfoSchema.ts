/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.10.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {exists} from '../runtime';
import {
    FeatureStrategySchema,
    FeatureStrategySchemaFromJSON,
    FeatureStrategySchemaToJSON,
} from './FeatureStrategySchema';

/**
 *
 * @export
 * @interface FeatureEnvironmentInfoSchema
 */
export interface FeatureEnvironmentInfoSchema {
    /**
     *
     * @type {string}
     * @memberof FeatureEnvironmentInfoSchema
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof FeatureEnvironmentInfoSchema
     */
    environment: string;
    /**
     *
     * @type {string}
     * @memberof FeatureEnvironmentInfoSchema
     */
    type?: string;
    /**
     *
     * @type {boolean}
     * @memberof FeatureEnvironmentInfoSchema
     */
    enabled: boolean;
    /**
     *
     * @type {Array<FeatureStrategySchema>}
     * @memberof FeatureEnvironmentInfoSchema
     */
    strategies: Array<FeatureStrategySchema>;
}

export function FeatureEnvironmentInfoSchemaFromJSON(json: any): FeatureEnvironmentInfoSchema {
    return FeatureEnvironmentInfoSchemaFromJSONTyped(json, false);
}

export function FeatureEnvironmentInfoSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureEnvironmentInfoSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'name': json['name'],
        'environment': json['environment'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'enabled': json['enabled'],
        'strategies': ((json['strategies'] as Array<any>).map(FeatureStrategySchemaFromJSON)),
    };
}

export function FeatureEnvironmentInfoSchemaToJSON(value?: FeatureEnvironmentInfoSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'name': value.name,
        'environment': value.environment,
        'type': value.type,
        'enabled': value.enabled,
        'strategies': ((value.strategies as Array<any>).map(FeatureStrategySchemaToJSON)),
    };
}

